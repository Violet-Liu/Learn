//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QZ.Test.Client.EnterpriseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/QZ.Service.Enterprise")]
    [System.SerializableAttribute()]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b {
            get {
                return this.bField;
            }
            set {
                if ((object.ReferenceEquals(this.bField, value) != true)) {
                    this.bField = value;
                    this.RaisePropertyChanged("b");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h {
            get {
                return this.hField;
            }
            set {
                if ((object.ReferenceEquals(this.hField, value) != true)) {
                    this.hField = value;
                    this.RaisePropertyChanged("h");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/QZ.Service.Enterprise")]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b {
            get {
                return this.bField;
            }
            set {
                if ((object.ReferenceEquals(this.bField, value) != true)) {
                    this.bField = value;
                    this.RaisePropertyChanged("b");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string h {
            get {
                return this.hField;
            }
            set {
                if ((object.ReferenceEquals(this.hField, value) != true)) {
                    this.hField = value;
                    this.RaisePropertyChanged("h");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnterpriseService.IEnterprise")]
    public interface IEnterprise {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Index", ReplyAction="http://tempuri.org/IEnterprise/IndexResponse")]
        QZ.Test.Client.EnterpriseService.Response Index(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Index", ReplyAction="http://tempuri.org/IEnterprise/IndexResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> IndexAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Index_Pics", ReplyAction="http://tempuri.org/IEnterprise/Index_PicsResponse")]
        QZ.Test.Client.EnterpriseService.Response Index_Pics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Index_Pics", ReplyAction="http://tempuri.org/IEnterprise/Index_PicsResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Index_PicsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Area", ReplyAction="http://tempuri.org/IEnterprise/AreaResponse")]
        QZ.Test.Client.EnterpriseService.Response Area();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Area", ReplyAction="http://tempuri.org/IEnterprise/AreaResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> AreaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Fresh", ReplyAction="http://tempuri.org/IEnterprise/Company_FreshResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Fresh();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Fresh", ReplyAction="http://tempuri.org/IEnterprise/Company_FreshResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FreshAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Dtl_Simple", ReplyAction="http://tempuri.org/IEnterprise/Company_Dtl_SimpleResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Dtl_Simple(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Dtl_Simple", ReplyAction="http://tempuri.org/IEnterprise/Company_Dtl_SimpleResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Dtl_SimpleAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Query", ReplyAction="http://tempuri.org/IEnterprise/Company_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Query", ReplyAction="http://tempuri.org/IEnterprise/Company_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Trades", ReplyAction="http://tempuri.org/IEnterprise/Company_TradesResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Trades(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Trades", ReplyAction="http://tempuri.org/IEnterprise/Company_TradesResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradesAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Recommend", ReplyAction="http://tempuri.org/IEnterprise/Company_RecommendResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Recommend();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Recommend", ReplyAction="http://tempuri.org/IEnterprise/Company_RecommendResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_RecommendAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Intelli_Tip", ReplyAction="http://tempuri.org/IEnterprise/Company_Intelli_TipResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Intelli_Tip(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Intelli_Tip", ReplyAction="http://tempuri.org/IEnterprise/Company_Intelli_TipResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Intelli_TipAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_FavoriteScan", ReplyAction="http://tempuri.org/IEnterprise/Company_FavoriteScanResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_FavoriteScan(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_FavoriteScan", ReplyAction="http://tempuri.org/IEnterprise/Company_FavoriteScanResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FavoriteScanAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Invest", ReplyAction="http://tempuri.org/IEnterprise/Company_InvestResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Invest(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Invest", ReplyAction="http://tempuri.org/IEnterprise/Company_InvestResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvestAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Map", ReplyAction="http://tempuri.org/IEnterprise/Company_MapResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Map(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Map", ReplyAction="http://tempuri.org/IEnterprise/Company_MapResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_MapAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Stock_Holder", ReplyAction="http://tempuri.org/IEnterprise/Company_Stock_HolderResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Stock_Holder(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Stock_Holder", ReplyAction="http://tempuri.org/IEnterprise/Company_Stock_HolderResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Stock_HolderAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_CetificationList", ReplyAction="http://tempuri.org/IEnterprise/Company_CetificationListResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_CetificationList(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_CetificationList", ReplyAction="http://tempuri.org/IEnterprise/Company_CetificationListResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CetificationListAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_CertificateDtl", ReplyAction="http://tempuri.org/IEnterprise/Company_CertificateDtlResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_CertificateDtl(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_CertificateDtl", ReplyAction="http://tempuri.org/IEnterprise/Company_CertificateDtlResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CertificateDtlAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_RegList", ReplyAction="http://tempuri.org/IEnterprise/Company_RegListResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_RegList(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_RegList", ReplyAction="http://tempuri.org/IEnterprise/Company_RegListResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_RegListAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_InvList", ReplyAction="http://tempuri.org/IEnterprise/Company_InvListResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_InvList(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_InvList", ReplyAction="http://tempuri.org/IEnterprise/Company_InvListResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvListAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_InvDtl", ReplyAction="http://tempuri.org/IEnterprise/Company_InvDtlResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_InvDtl(string ogs_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_InvDtl", ReplyAction="http://tempuri.org/IEnterprise/Company_InvDtlResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvDtlAsync(string ogs_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Change", ReplyAction="http://tempuri.org/IEnterprise/Company_ChangeResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Change(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Change", ReplyAction="http://tempuri.org/IEnterprise/Company_ChangeResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ChangeAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Icpl", ReplyAction="http://tempuri.org/IEnterprise/Company_IcplResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Icpl(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Icpl", ReplyAction="http://tempuri.org/IEnterprise/Company_IcplResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_IcplAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Branch", ReplyAction="http://tempuri.org/IEnterprise/Company_BranchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Branch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Branch", ReplyAction="http://tempuri.org/IEnterprise/Company_BranchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_BranchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Annual", ReplyAction="http://tempuri.org/IEnterprise/Company_AnnualResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Annual(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Annual", ReplyAction="http://tempuri.org/IEnterprise/Company_AnnualResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_AnnualAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Annual_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_Annual_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Annual_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Annual_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_Annual_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Annual_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Impression", ReplyAction="http://tempuri.org/IEnterprise/Company_ImpressionResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Impression(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Impression", ReplyAction="http://tempuri.org/IEnterprise/Company_ImpressionResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ImpressionAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_New_Topic", ReplyAction="http://tempuri.org/IEnterprise/Company_New_TopicResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_New_Topic(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_New_Topic", ReplyAction="http://tempuri.org/IEnterprise/Company_New_TopicResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_New_TopicAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Reply", ReplyAction="http://tempuri.org/IEnterprise/Company_ReplyResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Reply(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Reply", ReplyAction="http://tempuri.org/IEnterprise/Company_ReplyResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ReplyAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Fresh_Topic", ReplyAction="http://tempuri.org/IEnterprise/Company_Fresh_TopicResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Fresh_Topic(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Fresh_Topic", ReplyAction="http://tempuri.org/IEnterprise/Company_Fresh_TopicResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Fresh_TopicAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_Query", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Topic_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_Query", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Topic_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_Detail", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Favorite_Add", ReplyAction="http://tempuri.org/IEnterprise/Company_Favorite_AddResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Favorite_Add(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Favorite_Add", ReplyAction="http://tempuri.org/IEnterprise/Company_Favorite_AddResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Favorite_AddAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Favorite_Remove", ReplyAction="http://tempuri.org/IEnterprise/Company_Favorite_RemoveResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Favorite_Remove(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Favorite_Remove", ReplyAction="http://tempuri.org/IEnterprise/Company_Favorite_RemoveResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Favorite_RemoveAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Report_Send", ReplyAction="http://tempuri.org/IEnterprise/Company_Report_SendResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Report_Send(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Report_Send", ReplyAction="http://tempuri.org/IEnterprise/Company_Report_SendResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Report_SendAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Query_Hot", ReplyAction="http://tempuri.org/IEnterprise/Query_HotResponse")]
        QZ.Test.Client.EnterpriseService.Response Query_Hot(string pg_size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Query_Hot", ReplyAction="http://tempuri.org/IEnterprise/Query_HotResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Query_HotAsync(string pg_size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/ExtQuery_Hot", ReplyAction="http://tempuri.org/IEnterprise/ExtQuery_HotResponse")]
        QZ.Test.Client.EnterpriseService.Response ExtQuery_Hot(string q_type, string pg_size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/ExtQuery_Hot", ReplyAction="http://tempuri.org/IEnterprise/ExtQuery_HotResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> ExtQuery_HotAsync(string q_type, string pg_size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_UpDown_Vote", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_UpDown_VoteResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Topic_UpDown_Vote(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Topic_UpDown_Vote", ReplyAction="http://tempuri.org/IEnterprise/Company_Topic_UpDown_VoteResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_UpDown_VoteAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_UpDown_Vote", ReplyAction="http://tempuri.org/IEnterprise/Company_UpDown_VoteResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_UpDown_Vote(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_UpDown_Vote", ReplyAction="http://tempuri.org/IEnterprise/Company_UpDown_VoteResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_UpDown_VoteAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Correct", ReplyAction="http://tempuri.org/IEnterprise/Company_CorrectResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Correct(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Correct", ReplyAction="http://tempuri.org/IEnterprise/Company_CorrectResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CorrectAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Query_Brand", ReplyAction="http://tempuri.org/IEnterprise/Query_BrandResponse")]
        QZ.Test.Client.EnterpriseService.Response Query_Brand(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Query_Brand", ReplyAction="http://tempuri.org/IEnterprise/Query_BrandResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Query_BrandAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Query", ReplyAction="http://tempuri.org/IEnterprise/Patent_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Patent_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Query", ReplyAction="http://tempuri.org/IEnterprise/Patent_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Dtl", ReplyAction="http://tempuri.org/IEnterprise/Patent_DtlResponse")]
        QZ.Test.Client.EnterpriseService.Response Patent_Dtl(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Dtl", ReplyAction="http://tempuri.org/IEnterprise/Patent_DtlResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_DtlAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Brand_Dtl", ReplyAction="http://tempuri.org/IEnterprise/Brand_DtlResponse")]
        QZ.Test.Client.EnterpriseService.Response Brand_Dtl(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Brand_Dtl", ReplyAction="http://tempuri.org/IEnterprise/Brand_DtlResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Brand_DtlAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Universal_Query", ReplyAction="http://tempuri.org/IEnterprise/Patent_Universal_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Patent_Universal_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Universal_Query", ReplyAction="http://tempuri.org/IEnterprise/Patent_Universal_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_Universal_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Query", ReplyAction="http://tempuri.org/IEnterprise/Judge_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Judge_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Query", ReplyAction="http://tempuri.org/IEnterprise/Judge_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Detail", ReplyAction="http://tempuri.org/IEnterprise/Judge_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Judge_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Detail", ReplyAction="http://tempuri.org/IEnterprise/Judge_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Detail", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Dishonest_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Detail", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Query", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_QueryResponse")]
        QZ.Test.Client.EnterpriseService.Response Dishonest_Query(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Query", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_QueryResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_QueryAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Get", ReplyAction="http://tempuri.org/IEnterprise/Patent_GetResponse")]
        QZ.Test.Client.EnterpriseService.Response Patent_Get(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Patent_Get", ReplyAction="http://tempuri.org/IEnterprise/Patent_GetResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_GetAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Brand_Get", ReplyAction="http://tempuri.org/IEnterprise/Brand_GetResponse")]
        QZ.Test.Client.EnterpriseService.Response Brand_Get(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Brand_Get", ReplyAction="http://tempuri.org/IEnterprise/Brand_GetResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Brand_GetAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ScoreMark", ReplyAction="http://tempuri.org/IEnterprise/Company_ScoreMarkResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_ScoreMark(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ScoreMark", ReplyAction="http://tempuri.org/IEnterprise/Company_ScoreMarkResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ScoreMarkAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ScoreDetail", ReplyAction="http://tempuri.org/IEnterprise/Company_ScoreDetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_ScoreDetail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ScoreDetail", ReplyAction="http://tempuri.org/IEnterprise/Company_ScoreDetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ScoreDetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Get", ReplyAction="http://tempuri.org/IEnterprise/Judge_GetResponse")]
        QZ.Test.Client.EnterpriseService.Response Judge_Get(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Judge_Get", ReplyAction="http://tempuri.org/IEnterprise/Judge_GetResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_GetAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Get", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_GetResponse")]
        QZ.Test.Client.EnterpriseService.Response Dishonest_Get(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Dishonest_Get", ReplyAction="http://tempuri.org/IEnterprise/Dishonest_GetResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_GetAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Copyrights_Get", ReplyAction="http://tempuri.org/IEnterprise/Copyrights_GetResponse")]
        QZ.Test.Client.EnterpriseService.Response Copyrights_Get(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Copyrights_Get", ReplyAction="http://tempuri.org/IEnterprise/Copyrights_GetResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Copyrights_GetAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeInfos", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeInfosResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_TradeInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeInfos", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeInfosResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeSearchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_TradeSearch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeSearchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ProInfos", ReplyAction="http://tempuri.org/IEnterprise/Company_ProInfosResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_ProInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ProInfos", ReplyAction="http://tempuri.org/IEnterprise/Company_ProInfosResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ProInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ProSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_ProSearchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_ProSearch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ProSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_ProSearchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ProSearchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Comment_TipOff", ReplyAction="http://tempuri.org/IEnterprise/Comment_TipOffResponse")]
        QZ.Test.Client.EnterpriseService.Response Comment_TipOff(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Comment_TipOff", ReplyAction="http://tempuri.org/IEnterprise/Comment_TipOffResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Comment_TipOffAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Comment_Shield", ReplyAction="http://tempuri.org/IEnterprise/Comment_ShieldResponse")]
        QZ.Test.Client.EnterpriseService.Response Comment_Shield(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Comment_Shield", ReplyAction="http://tempuri.org/IEnterprise/Comment_ShieldResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Comment_ShieldAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_FwdTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_FwdTradeSearchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_FwdTradeSearch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_FwdTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_FwdTradeSearchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FwdTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ExhTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_ExhTradeSearchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_ExhTradeSearch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_ExhTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_ExhTradeSearchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ExhTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Exhibit_Participate", ReplyAction="http://tempuri.org/IEnterprise/Company_Exhibit_ParticipateResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Exhibit_Participate(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Exhibit_Participate", ReplyAction="http://tempuri.org/IEnterprise/Company_Exhibit_ParticipateResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Exhibit_ParticipateAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Exhibit_Detail", ReplyAction="http://tempuri.org/IEnterprise/Exhibit_DetailResponse")]
        QZ.Test.Client.EnterpriseService.Response Exhibit_Detail(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Exhibit_Detail", ReplyAction="http://tempuri.org/IEnterprise/Exhibit_DetailResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Exhibit_DetailAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Exhibit_Companies", ReplyAction="http://tempuri.org/IEnterprise/Exhibit_CompaniesResponse")]
        QZ.Test.Client.EnterpriseService.Response Exhibit_Companies(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Exhibit_Companies", ReplyAction="http://tempuri.org/IEnterprise/Exhibit_CompaniesResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Exhibit_CompaniesAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeIntelliTip", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeIntelliTipResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_TradeIntelliTip(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_TradeIntelliTip", ReplyAction="http://tempuri.org/IEnterprise/Company_TradeIntelliTipResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeIntelliTipAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_UniversalTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_UniversalTradeSearchResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_UniversalTradeSearch(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_UniversalTradeSearch", ReplyAction="http://tempuri.org/IEnterprise/Company_UniversalTradeSearchResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_UniversalTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Search4Exhibit", ReplyAction="http://tempuri.org/IEnterprise/Company_Search4ExhibitResponse")]
        QZ.Test.Client.EnterpriseService.Response Company_Search4Exhibit(QZ.Test.Client.EnterpriseService.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnterprise/Company_Search4Exhibit", ReplyAction="http://tempuri.org/IEnterprise/Company_Search4ExhibitResponse")]
        System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Search4ExhibitAsync(QZ.Test.Client.EnterpriseService.Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnterpriseChannel : QZ.Test.Client.EnterpriseService.IEnterprise, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnterpriseClient : System.ServiceModel.ClientBase<QZ.Test.Client.EnterpriseService.IEnterprise>, QZ.Test.Client.EnterpriseService.IEnterprise {
        
        public EnterpriseClient() {
        }
        
        public EnterpriseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnterpriseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnterpriseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnterpriseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QZ.Test.Client.EnterpriseService.Response Index(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Index(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> IndexAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.IndexAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Index_Pics() {
            return base.Channel.Index_Pics();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Index_PicsAsync() {
            return base.Channel.Index_PicsAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Area() {
            return base.Channel.Area();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> AreaAsync() {
            return base.Channel.AreaAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Fresh() {
            return base.Channel.Company_Fresh();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FreshAsync() {
            return base.Channel.Company_FreshAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Dtl_Simple(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Dtl_Simple(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Dtl_SimpleAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Dtl_SimpleAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Trades(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Trades(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradesAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_TradesAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Recommend() {
            return base.Channel.Company_Recommend();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_RecommendAsync() {
            return base.Channel.Company_RecommendAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Intelli_Tip(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Intelli_Tip(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Intelli_TipAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Intelli_TipAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_FavoriteScan(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_FavoriteScan(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FavoriteScanAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_FavoriteScanAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Invest(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Invest(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvestAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_InvestAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Map(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Map(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_MapAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_MapAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Stock_Holder(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Stock_Holder(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Stock_HolderAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Stock_HolderAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_CetificationList(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_CetificationList(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CetificationListAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_CetificationListAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_CertificateDtl(string request) {
            return base.Channel.Company_CertificateDtl(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CertificateDtlAsync(string request) {
            return base.Channel.Company_CertificateDtlAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_RegList(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_RegList(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_RegListAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_RegListAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_InvList(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_InvList(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvListAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_InvListAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_InvDtl(string ogs_id) {
            return base.Channel.Company_InvDtl(ogs_id);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_InvDtlAsync(string ogs_id) {
            return base.Channel.Company_InvDtlAsync(ogs_id);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Change(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Change(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ChangeAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ChangeAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Icpl(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Icpl(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_IcplAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_IcplAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Branch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Branch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_BranchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_BranchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Annual(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Annual(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_AnnualAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_AnnualAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Annual_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Annual_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Annual_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Annual_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Impression(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Impression(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ImpressionAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ImpressionAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_New_Topic(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_New_Topic(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_New_TopicAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_New_TopicAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Reply(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Reply(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ReplyAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ReplyAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Fresh_Topic(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Fresh_Topic(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Fresh_TopicAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Fresh_TopicAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Topic_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Topic_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Favorite_Add(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Favorite_Add(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Favorite_AddAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Favorite_AddAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Favorite_Remove(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Favorite_Remove(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Favorite_RemoveAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Favorite_RemoveAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Report_Send(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Report_Send(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Report_SendAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Report_SendAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Query_Hot(string pg_size) {
            return base.Channel.Query_Hot(pg_size);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Query_HotAsync(string pg_size) {
            return base.Channel.Query_HotAsync(pg_size);
        }
        
        public QZ.Test.Client.EnterpriseService.Response ExtQuery_Hot(string q_type, string pg_size) {
            return base.Channel.ExtQuery_Hot(q_type, pg_size);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> ExtQuery_HotAsync(string q_type, string pg_size) {
            return base.Channel.ExtQuery_HotAsync(q_type, pg_size);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Topic_UpDown_Vote(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_UpDown_Vote(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Topic_UpDown_VoteAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Topic_UpDown_VoteAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_UpDown_Vote(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_UpDown_Vote(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_UpDown_VoteAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_UpDown_VoteAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Correct(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Correct(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_CorrectAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_CorrectAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Query_Brand(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Query_Brand(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Query_BrandAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Query_BrandAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Patent_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Patent_Dtl(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_Dtl(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_DtlAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_DtlAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Brand_Dtl(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Brand_Dtl(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Brand_DtlAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Brand_DtlAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Patent_Universal_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_Universal_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_Universal_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_Universal_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Judge_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Judge_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Dishonest_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Dishonest_Query(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_Query(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_QueryAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_QueryAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Patent_Get(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_Get(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Patent_GetAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Patent_GetAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Brand_Get(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Brand_Get(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Brand_GetAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Brand_GetAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_ScoreMark(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ScoreMark(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ScoreMarkAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ScoreMarkAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_ScoreDetail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ScoreDetail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ScoreDetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ScoreDetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Judge_Get(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_Get(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Judge_GetAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Judge_GetAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Dishonest_Get(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_Get(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Dishonest_GetAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Dishonest_GetAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Copyrights_Get(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Copyrights_Get(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Copyrights_GetAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Copyrights_GetAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_TradeInfos() {
            return base.Channel.Company_TradeInfos();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeInfosAsync() {
            return base.Channel.Company_TradeInfosAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_TradeSearch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_TradeSearch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_TradeSearchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_ProInfos() {
            return base.Channel.Company_ProInfos();
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ProInfosAsync() {
            return base.Channel.Company_ProInfosAsync();
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_ProSearch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ProSearch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ProSearchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ProSearchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Comment_TipOff(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Comment_TipOff(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Comment_TipOffAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Comment_TipOffAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Comment_Shield(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Comment_Shield(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Comment_ShieldAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Comment_ShieldAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_FwdTradeSearch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_FwdTradeSearch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_FwdTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_FwdTradeSearchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_ExhTradeSearch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ExhTradeSearch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_ExhTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_ExhTradeSearchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Exhibit_Participate(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Exhibit_Participate(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Exhibit_ParticipateAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Exhibit_ParticipateAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Exhibit_Detail(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Exhibit_Detail(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Exhibit_DetailAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Exhibit_DetailAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Exhibit_Companies(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Exhibit_Companies(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Exhibit_CompaniesAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Exhibit_CompaniesAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_TradeIntelliTip(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_TradeIntelliTip(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_TradeIntelliTipAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_TradeIntelliTipAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_UniversalTradeSearch(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_UniversalTradeSearch(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_UniversalTradeSearchAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_UniversalTradeSearchAsync(request);
        }
        
        public QZ.Test.Client.EnterpriseService.Response Company_Search4Exhibit(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Search4Exhibit(request);
        }
        
        public System.Threading.Tasks.Task<QZ.Test.Client.EnterpriseService.Response> Company_Search4ExhibitAsync(QZ.Test.Client.EnterpriseService.Request request) {
            return base.Channel.Company_Search4ExhibitAsync(request);
        }
    }
}
